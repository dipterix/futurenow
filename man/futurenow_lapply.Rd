% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/apply.R
\name{futurenow_lapply}
\alias{futurenow_lapply}
\title{A wrapper of \code{\link[future.apply:future_lapply]{future.apply::future_lapply()}} that has the correct
environment}
\usage{
futurenow_lapply(
  X,
  FUN,
  ...,
  future.envir = parent.frame(),
  future.globals = TRUE,
  future.packages = NULL,
  future.lazy = FALSE,
  future.seed = FALSE,
  future.scheduling = 1,
  future.chunk.size = NULL,
  future.label = "futurenow_lapply-\%d"
)
}
\arguments{
\item{X}{Vector or list, R objects}

\item{FUN}{Function to apply on each element of \code{X}}

\item{...}{Further argument to be passed to \code{FUN} or
\code{\link[future.apply:future_lapply]{future.apply::future_eapply()}}}

\item{future.envir}{Where the future instances should be created}

\item{future.globals}{A logical, a character vector, or a named list for
controlling how global variables are handled; See
\code{\link[future.apply:future_lapply]{future.apply::future_eapply()}}}

\item{future.packages}{Character vector of packages for future instances to
load}

\item{future.lazy}{Whether to start evaluation immediately}

\item{future.seed}{A logical or an integer (of length one or seven), or a
list of \code{length(X)} with prespecified random seeds; see
\code{\link[future.apply:future_lapply]{future.apply::future_eapply()}}}

\item{future.scheduling, future.chunk.size}{See
\code{\link[future.apply:future_lapply]{future.apply::future_eapply()}}}

\item{future.label}{Label to be assigned to each future instances}
}
\value{
A list with same length and names as \code{X}. See
\code{\link[base:lapply]{base::lapply()}} for details.
}
\description{
Fixes \code{\link[future.apply:future_lapply]{future.apply::future_lapply()}} issue where
the environment is not set properly.
}
\seealso{
\code{\link[future.apply:future_lapply]{future.apply::future_eapply()}},\code{\link[base:lapply]{base::lapply()}}
}
